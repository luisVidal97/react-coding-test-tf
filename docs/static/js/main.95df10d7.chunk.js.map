{"version":3,"sources":["components/TextinputComponent.tsx","components/FocusableTextInputComponent.tsx","components/NavBarComponent.tsx","pages/FocusableComponentsPage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/CardUser.tsx","components/ModeVotingListComponent.tsx","helpers/getRandommUsers.tsx","pages/VotingListPage.tsx","customHooks/useFetchRandomUsers.tsx","routers/AppRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TextInputComponent","inputRef","useEffect","current","focus","type","ref","className","FocusableTextInputComponent","focused","useRef","NavBarComponent","to","pathname","target","FocusableComponentsPage","useState","activateSimulation","setActivateSimulation","renderers","code","SyntaxHighlighterCode","children","onChange","checked","onColor","offColor","JSON","stringify","value","style","dracula","language","HomePage","history","useHistory","onClick","Swal","fire","title","input","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","number","console","log","push","NotFoundPage","src","CardUser","id","picture","firstName","lastName","age","slogan","votes","handleIncrementVote","handleDecrementVote","showButtons","lastVoted","structureWithButtons","structureWithoutButtons","ModeVotingListComponent","mode","candidatesArray","sort","a","b","map","item","getRandomUsers","candidatesNumber","url","candidates","fetch","response","json","results","loremIpsum","sentenceLowerBound","sentenceUpperBound","Math","floor","random","parseInt","dob","email","name","first","last","thumbnail","VotingListPage","data","isLoading","state","setstate","then","setTimeout","useFetchRandomUsers","useParams","setData","setLastVoted","find","newArray","currentState","AppRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95df10d7.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\n\r\ninterface PropsTextInputComponent {\r\n    inputRef?: React.RefObject<HTMLInputElement>,\r\n}\r\n\r\nexport const TextInputComponent: React.FC<PropsTextInputComponent> = ({inputRef}) => {\r\n\r\n    \r\n    useEffect(() => {\r\n        inputRef?.current?.focus();\r\n    }, [inputRef])\r\n\r\n    return (\r\n        <input type=\"text\" ref={inputRef} className=\"textInputComponent\"/>\r\n    );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { TextInputComponent } from './TextinputComponent';\r\n\r\ninterface PropsFocusableTextInput {\r\n    focused?: boolean,\r\n}\r\n\r\nexport const FocusableTextInputComponent: React.FC<PropsFocusableTextInput> = ({focused}) => {\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    \r\n    return (\r\n        <>\r\n        {\r\n            focused ?\r\n                <TextInputComponent  inputRef={inputRef}/>\r\n            :\r\n                <TextInputComponent  />\r\n        }\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const NavBarComponent: React.FC = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link to=\"/\" >\r\n                <i className=\"fas fa-home fa-3x navbar__icons\"></i>\r\n            </Link>\r\n            \r\n            <Link to={{pathname:\"https://github.com/luisVidal97/react-coding-test-tf\"}}  target=\"_blank\">\r\n                <i className=\"fab fa-github fa-3x navbar__icons\"></i>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Switch from \"react-switch\";\r\nimport { FocusableTextInputComponent } from '../components/FocusableTextInputComponent';\r\nimport { NavBarComponent } from '../components/NavBarComponent';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport {dracula} from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nconst useFocusableComponent = `\r\n    <FocusableTextInputComponent  focused= { true } />\r\n`;\r\n\r\n\r\nexport const FocusableComponentsPage: React.FC = () => {\r\n\r\n    const [activateSimulation, setActivateSimulation] = useState<boolean>(false);\r\n\r\n    const handleCheked = (checked: boolean) => {\r\n        setActivateSimulation(checked);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBarComponent />\r\n\r\n            <div className=\"focusableComponentsPage__container\">\r\n                <h1 className=\"title focusableComponentsPage__title\">Focusable input</h1>\r\n                <p>\r\n                    In this section, you can find a custom component. It is a text input that allow \r\n                    you to pass it by focused prop. This determinate if the input text is focusable depending\r\n                    on its respective prop. Next, you watch the code:\r\n                </p>\r\n                \r\n                <ReactMarkdown  renderers={{\r\n                code: SyntaxHighlighterCode\r\n                }} children={useFocusableComponent} />\r\n\r\n                <p>\r\n                    This focused prop is optional and only accepts boolean values. Below, you can set the\r\n                    value of the prop and check its functionality changing Switch component. Activate the \r\n                    Switch to send focused prop in 'true' and disable it to set the prop in 'false'.\r\n                </p>             \r\n\r\n                <p>Switch:</p>\r\n                \r\n                <Switch \r\n                    onChange={ handleCheked } \r\n                    checked={ activateSimulation } \r\n                    onColor=\"#0A0A36\" \r\n                    offColor=\"#cccccc\"\r\n                />\r\n\r\n                <ReactMarkdown  renderers={{\r\n                code: SyntaxHighlighterCode\r\n                }} children={\r\n                `\r\n                <FocusableTextInputComponent  focused= { ${JSON.stringify(activateSimulation)} } />                `} \r\n                />\r\n                <br />\r\n                <FocusableTextInputComponent focused={activateSimulation} />\r\n\r\n            </div>\r\n                    \r\n        </>\r\n    );\r\n}\r\n\r\ninterface IProps {\r\n    value: string;\r\n}\r\n\r\nconst SyntaxHighlighterCode = ({value}: IProps) => {\r\n    return (\r\n        <SyntaxHighlighter style={dracula} language=\"javascript\" children={value} />\r\n    );\r\n}\r\n","import { Link, useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const HomePage: React.FC = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleOnClick = () => {\r\n\r\n        Swal.fire({\r\n            title: 'Enter candidates number',\r\n            input: 'number',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Look up',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: (number) => {\r\n                console.log(number);\r\n                history.push(`/voting-list/${number}`);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"default-bg\">\r\n            <div className=\"homepage__github\">\r\n                <Link to={{pathname:\"https://github.com/luisVidal97/react-coding-test-tf\"}}  target=\"_blank\">\r\n                    <i className=\"fab fa-github fa-3x navbar__icons\"></i>\r\n                </Link>\r\n            </div>\r\n            <div className=\"homepage__container\">\r\n\r\n                <h1 className=\"title text-center homepage__title\">\r\n                    Luis Fernando  <br />\r\n                    Cruces Vidal\r\n                </h1>\r\n\r\n                <div className=\"homepage__div-links\">\r\n                    <Link to=\"/focusable-input\" className=\"homepage__buttons\">\r\n                       Focusable input. Test it now!\r\n                    </Link>\r\n                    <button onClick={ handleOnClick } className=\"homepage__buttons\">\r\n                        Voting list. Check it now!\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport const NotFoundPage: React.FC = () => {\r\n    return (\r\n        <div className=\"default-bg\">\r\n            <div className=\"notfoundpage__container\">\r\n                <h1 className=\"notfoundpage__text\">\r\n                    Page not found 404...\r\n                </h1>\r\n                <Link to=\"/\" className=\"notfoundpage__text notfoundpage__link\">\r\n                    Please return to home page\r\n                </Link>\r\n                <br />\r\n                <div className=\"notfoundpage__img\">\r\n                    <img src=\"./assets/Loft-404.gif\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\ninterface PropsCard {\r\n    id: string\r\n    lastVoted: string,\r\n    picture: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    age: string | number,\r\n    slogan: string,\r\n    votes: number,\r\n    showButtons: boolean,\r\n    handleIncrementVote: Function,\r\n    handleDecrementVote: Function,\r\n}\r\n\r\n\r\n\r\nexport const CardUser: React.FC<PropsCard> = ( {id, picture, firstName, lastName, age, slogan, votes, handleIncrementVote, handleDecrementVote, showButtons, lastVoted}) => {\r\n\r\n    const structureWithButtons = \r\n        <>\r\n            <h5>Votes:</h5>\r\n            <span className=\"animate__animated animate__fadeIn\">{votes}</span>  \r\n            <div className=\"cardUser__divVotes\">\r\n                <button \r\n                title=\"Increment his/her vote\" \r\n                className=\"cardUser_buttons\"\r\n                onClick={ () => handleIncrementVote(id)}\r\n                >\r\n                    <i className=\"fas fa-plus fa-2x\"></i>\r\n                </button>\r\n\r\n                <button \r\n                    title=\"Decrement his/her vote\" \r\n                    className=\"cardUser_buttons\"\r\n                    onClick={ () => handleDecrementVote(id)}\r\n                >\r\n                    <i className=\"fas fa-minus-circle fa-2x\"></i>\r\n                </button>\r\n            </div>\r\n        </>\r\n    ;\r\n    \r\n    const structureWithoutButtons = \r\n        <div className=\"cardUser__withoutButtons\">\r\n            <h5>Votes:</h5>\r\n            <span className=\"animate__animated animate__fadeIn\">{votes}</span>  \r\n        </div>\r\n    ;\r\n\r\n\r\n    return (\r\n        <div className=\"cardUser animate__animated animate__fadeIn \">\r\n            <img src={picture} />\r\n            <div className=\"cardUser__fullName\">\r\n                <h4>{`${firstName} ${lastName}`}</h4>\r\n                <h5>{`Age: ${age}`}</h5>\r\n                <blockquote className=\"cardUser__slogan\">{`\"${slogan}\"`}</blockquote> \r\n            </div>\r\n\r\n\r\n            <div className=\"cardUser__votes\">\r\n                {\r\n                showButtons?\r\n                    structureWithButtons\r\n                :\r\n                    structureWithoutButtons\r\n                }\r\n                \r\n            </div>\r\n            {\r\n                lastVoted === id &&\r\n                <div className=\"cardUser__highlight\">\r\n                    <i className=\"fas fa-star fa-2x\"></i>\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { CardUser } from './CardUser';\r\n\r\ninterface PropsModeVotingListComponent {\r\n    mode?: string,\r\n    title: string,\r\n    lastVoted: string,\r\n    candidatesArray: Array<Object>,\r\n    handleIncrementVote: Function,\r\n    handleDecrementVote: Function,\r\n}\r\n\r\nexport const ModeVotingListComponent: React.FC<PropsModeVotingListComponent> = ({title, mode, candidatesArray, handleIncrementVote, handleDecrementVote, lastVoted }) => {\r\n    \r\n    let showButtons = true;\r\n    if(mode === 'orderByVotes'){\r\n        candidatesArray.sort((a: any, b: any) => b.votes - a.votes);\r\n        showButtons = false;\r\n    }\r\n    else if(mode === 'orderByAge'){\r\n        candidatesArray.sort((a: any, b: any) => b.age - a.age);\r\n        showButtons = false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"modeVotingListComponent\">\r\n            <h3>{title}</h3>\r\n            {\r\n                candidatesArray.map((item: any) => \r\n                    <CardUser \r\n                        key={ item.id} \r\n                        {...item} \r\n                        handleIncrementVote= {handleIncrementVote}\r\n                        handleDecrementVote= {handleDecrementVote}\r\n                        showButtons= {showButtons}\r\n                        lastVoted={lastVoted}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { loremIpsum } from \"lorem-ipsum\";\r\n\r\n\r\nexport const getRandomUsers = async (candidatesNumber: string) =>{\r\n    const url = `https://randomuser.me/api/?results=${candidatesNumber}&inc=gender,name,email,dob,picture,email`;\r\n    let candidates = [];\r\n    try {\r\n        const response = await fetch( url );\r\n        const {results} = await response.json();\r\n        candidates = results.map( (item: any) => {\r\n            const slogan = loremIpsum({\r\n                sentenceLowerBound: 10,   // Min. number of words per sentence.\r\n                sentenceUpperBound: 10,  // Max. number of words per sentence.\r\n            });\r\n            const votes = Math.floor(Math.random() * 10) + 1;\r\n            let age = parseInt(item.dob.age) ;\r\n            age =  age < 18? Math.floor(Math.random() * 100) + 18 : age;\r\n            return ({\r\n                id: item.email,\r\n                firstName: item.name.first,\r\n                lastName: item.name.last,\r\n                picture: item.picture.thumbnail,\r\n                age,\r\n                slogan,\r\n                votes\r\n            });\r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n    return candidates;\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CardUser } from '../components/CardUser';\r\nimport { ModeVotingListComponent } from '../components/ModeVotingListComponent';\r\n\r\n\r\nimport { NavBarComponent } from '../components/NavBarComponent';\r\nimport { useFetchRandomUsers } from '../customHooks/useFetchRandomUsers';\r\n\r\nexport const VotingListPage: React.FC = () => {\r\n\r\n    const { candidates }: {candidates: string} = useParams();\r\n    \r\n    const [ candidatesArray , isLoading, setData] = useFetchRandomUsers(candidates);\r\n    const [lastVoted, setLastVoted] = useState<string>('');\r\n    \r\n\r\n    const handleIncrementVote = (id: string) => {\r\n        const user:any = candidatesArray.find( (item: any) => item.id === id);\r\n        let votes = user.votes;\r\n\r\n        if(votes === 20) return;\r\n        \r\n        votes++;\r\n        setLastVoted(id);\r\n        const newArray = candidatesArray.map((item: any)=> {\r\n            if(item.id === id){\r\n                item.votes = votes\r\n            }\r\n            return item;\r\n        });\r\n        \r\n        setData((currentState: any) => ({\r\n            ...currentState,\r\n            data: newArray\r\n        }));\r\n    }\r\n\r\n    const handleDecrementVote = (id: string) => {\r\n        const user:any = candidatesArray.find( (item: any) => item.id === id);\r\n        let votes = user.votes;\r\n\r\n        if(votes === 0) return;\r\n        \r\n        votes--;\r\n        setLastVoted(id);\r\n        const newArray = candidatesArray.map((item: any)=> {\r\n            if(item.id === id){\r\n                item.votes = votes\r\n            }\r\n            return item;\r\n        });\r\n        \r\n        setData((currentState: any) => ({\r\n            ...currentState,\r\n            data: newArray\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBarComponent />\r\n            <br/>\r\n            <br/>\r\n            <h1 className=\"votingListPage__title\">Voting list</h1>\r\n            <br/>\r\n            \r\n            {\r\n            isLoading?\r\n                <div className=\"sk-circle\">\r\n                    <div className=\"sk-circle1 sk-child\"></div>\r\n                    <div className=\"sk-circle2 sk-child\"></div>\r\n                    <div className=\"sk-circle3 sk-child\"></div>\r\n                    <div className=\"sk-circle4 sk-child\"></div>\r\n                    <div className=\"sk-circle5 sk-child\"></div>\r\n                    <div className=\"sk-circle6 sk-child\"></div>\r\n                    <div className=\"sk-circle7 sk-child\"></div>\r\n                    <div className=\"sk-circle8 sk-child\"></div>\r\n                    <div className=\"sk-circle9 sk-child\"></div>\r\n                    <div className=\"sk-circle10 sk-child\"></div>\r\n                    <div className=\"sk-circle11 sk-child\"></div>\r\n                    <div className=\"sk-circle12 sk-child\"></div>\r\n                </div>\r\n            :\r\n                <div className=\"votingListPage__modes animate__animated animate__fadeIn\">\r\n                    <ModeVotingListComponent \r\n                        title=\"Candidates List\"\r\n                        candidatesArray={candidatesArray}\r\n                        lastVoted={lastVoted}\r\n                        handleIncrementVote= {handleIncrementVote}\r\n                        handleDecrementVote= {handleDecrementVote}\r\n                    />\r\n                    <hr/>\r\n                    <br />\r\n                    <ModeVotingListComponent \r\n                        title=\"Order by votes\"\r\n                        mode= \"orderByVotes\"\r\n                        lastVoted={lastVoted}\r\n                        candidatesArray={[...candidatesArray]}\r\n                        handleIncrementVote={handleIncrementVote}\r\n                        handleDecrementVote={handleDecrementVote}\r\n                    />\r\n                    <hr/>\r\n                    <br />\r\n                    <ModeVotingListComponent \r\n                        title=\"Order by age\"\r\n                        mode= \"orderByAge\"\r\n                        lastVoted={lastVoted}\r\n                        candidatesArray={[...candidatesArray]}\r\n                        handleIncrementVote= {handleIncrementVote}\r\n                        handleDecrementVote= {handleDecrementVote}\r\n                    />\r\n                    \r\n                    \r\n                    <br/>\r\n                </div>\r\n                \r\n            }\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getRandomUsers } from \"../helpers/getRandommUsers\";\r\n\r\nexport const useFetchRandomUsers = (candidates: string) => {\r\n    const [state, setstate] = useState<any>({\r\n        data: [],\r\n        isLoading: true\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getRandomUsers(candidates)\r\n            .then( candidatesArray => {\r\n\r\n                setTimeout( ()=>{\r\n                    setstate({\r\n                        data: candidatesArray,\r\n                        isLoading: false\r\n                    });\r\n\r\n                },1000);\r\n            } );\r\n    }, [candidates])\r\n\r\n    return [state.data, state.isLoading, setstate];\r\n}","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { FocusableComponentsPage } from \"../pages/FocusableComponentsPage\";\r\nimport { HomePage } from \"../pages/HomePage\";\r\nimport { NotFoundPage } from \"../pages/NotFoundPage\";\r\nimport { VotingListPage } from \"../pages/VotingListPage\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n            <Route exact path=\"/\"  component={HomePage}/>\r\n            <Route exact path=\"/page-not-found\" component={NotFoundPage}/>\r\n            <Route exact path=\"/focusable-input\" component={FocusableComponentsPage}/>\r\n            <Route exact path=\"/voting-list/:candidates\" component={VotingListPage}/>\r\n            <Redirect to=\"page-not-found\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","import React from 'react';\nimport { AppRouter } from './routers/AppRouter';\n\nfunction App() {\n  return (\n    <AppRouter />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}